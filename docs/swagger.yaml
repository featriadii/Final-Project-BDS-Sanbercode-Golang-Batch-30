definitions:
  controllers.LoginInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  controllers.RegisterInput:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  controllers.ResetPasswordInput:
    properties:
      password:
        type: string
    required:
    - password
    type: object
  controllers.companyInput:
    properties:
      name:
        type: string
    type: object
  controllers.gameImageInput:
    properties:
      game_id:
        type: integer
      image_url:
        type: string
    type: object
  controllers.gameInput:
    properties:
      developer_id:
        type: integer
      price:
        type: integer
      published_id:
        type: integer
      title:
        type: string
      year:
        type: integer
    type: object
  controllers.gameTagInput:
    properties:
      game_id:
        type: integer
      tag_id:
        type: integer
    type: object
  controllers.reviewInput:
    properties:
      description:
        type: string
      game_id:
        type: integer
      rating:
        type: integer
      user_id:
        type: integer
    type: object
  controllers.tagInput:
    properties:
      name:
        type: string
    type: object
  models.Company:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.Game:
    properties:
      created_at:
        type: string
      developer_id:
        type: integer
      id:
        type: integer
      price:
        type: integer
      published_id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      year:
        type: integer
    type: object
  models.GameImage:
    properties:
      created_at:
        type: string
      game_id:
        type: integer
      id:
        type: integer
      image_url:
        type: string
      updated_at:
        type: string
    type: object
  models.GameTag:
    properties:
      created_at:
        type: string
      game_id:
        type: integer
      id:
        type: integer
      tag_id:
        type: integer
      updated_at:
        type: string
    type: object
  models.Review:
    properties:
      created_at:
        type: string
      description:
        type: string
      game_id:
        type: integer
      id:
        type: integer
      rating:
        type: integer
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  models.Tag:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
paths:
  /companies:
    get:
      description: Get a list of Company.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Company'
            type: array
      summary: Get all Company.
      tags:
      - Company
    post:
      description: Creating a new Company.
      parameters:
      - description: the body to create a new Company
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.companyInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Company'
      security:
      - BearerToken: []
      summary: Create New Company.
      tags:
      - Company
  /companies/{id}:
    delete:
      description: Delete a Company by id.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Company id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete one Company.
      tags:
      - Company
    get:
      description: Get an Company by id.
      parameters:
      - description: Company id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Company'
      summary: Get Company.
      tags:
      - Company
    patch:
      description: Update Company by id.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Company id
        in: path
        name: id
        required: true
        type: string
      - description: the body to update company
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.companyInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Company'
      security:
      - BearerToken: []
      summary: Update Company.
      tags:
      - Company
  /game-images:
    get:
      description: Get a list of GameImage.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.GameImage'
            type: array
      summary: Get all gameImage.
      tags:
      - GameImage
    post:
      description: Creating a new GameImage.
      parameters:
      - description: the body to create a new GameImage
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.gameImageInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GameImage'
      security:
      - BearerToken: []
      summary: Create New GameImage.
      tags:
      - GameImage
  /game-images/{id}:
    delete:
      description: Delete a gameImage by id.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: gameImage id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete one gameImage.
      tags:
      - GameImage
    get:
      description: Get a GameImage by id.
      parameters:
      - description: gameImage id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GameImage'
      summary: Get GameImage.
      tags:
      - GameImage
  /game-tags:
    get:
      description: Get a list of GameTag.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.GameTag'
            type: array
      summary: Get all gameTag.
      tags:
      - GameTag
    post:
      description: Creating a new GameTag.
      parameters:
      - description: the body to create a new GameTag
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.gameTagInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GameTag'
      security:
      - BearerToken: []
      summary: Create New GameTag.
      tags:
      - GameTag
  /game-tags/{id}:
    delete:
      description: Delete a gameTag by id.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: gameTag id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete one gameTag.
      tags:
      - GameTag
    get:
      description: Get a GameTag by id.
      parameters:
      - description: gameTag id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GameTag'
      summary: Get GameTag.
      tags:
      - GameTag
  /games:
    get:
      description: Get a list of Game.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Game'
            type: array
      summary: Get all game.
      tags:
      - Game
    post:
      description: Creating a new Game.
      parameters:
      - description: the body to create a new Game
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.gameInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Game'
      security:
      - BearerToken: []
      summary: Create New Game.
      tags:
      - Game
  /games/{id}:
    delete:
      description: Delete a game by id.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: game id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete one game.
      tags:
      - Game
    get:
      description: Get a Game by id.
      parameters:
      - description: game id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Game'
      summary: Get Game.
      tags:
      - Game
    patch:
      description: Update game by id.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: game id
        in: path
        name: id
        required: true
        type: string
      - description: the body to update an game
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.gameInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Game'
      security:
      - BearerToken: []
      summary: Update Game.
      tags:
      - Game
  /login:
    post:
      description: Logging in to get jwt token to access admin or user api by roles.
      parameters:
      - description: the body to login a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Login as as user.
      tags:
      - Auth
  /register:
    post:
      description: registering a user from public access.
      parameters:
      - description: the body to register a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.RegisterInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Register a user.
      tags:
      - Auth
  /reviews:
    get:
      description: Get a list of Review.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Review'
            type: array
      summary: Get all review.
      tags:
      - Review
    post:
      description: Creating a new Review.
      parameters:
      - description: the body to create a new Review
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.reviewInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Review'
      security:
      - BearerToken: []
      summary: Create New Review.
      tags:
      - Review
  /reviews/{id}:
    delete:
      description: Delete a review by id.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: review id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete one Review.
      tags:
      - Review
    get:
      description: Get a Review by id.
      parameters:
      - description: review id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Review'
      summary: Get Review.
      tags:
      - Review
    patch:
      description: Update review by id.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: review id
        in: path
        name: id
        required: true
        type: string
      - description: the body to update an review
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.reviewInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Review'
      security:
      - BearerToken: []
      summary: Update Review.
      tags:
      - Review
  /tags:
    get:
      description: Get a list of Tag.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Tag'
            type: array
      summary: Get all Tag.
      tags:
      - Tag
    post:
      description: Creating a new Tag.
      parameters:
      - description: the body to create a new Tag
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.tagInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tag'
      security:
      - BearerToken: []
      summary: Create New Tag.
      tags:
      - Tag
  /tags/{id}:
    delete:
      description: Delete a Tag by id.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Tag id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete one Tag.
      tags:
      - Tag
    get:
      description: Get an Tag by id.
      parameters:
      - description: Tag id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tag'
      summary: Get Tag.
      tags:
      - Tag
  /users/reset-password:
    post:
      description: reseting password a user from public access.
      parameters:
      - description: the body to reset password a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.ResetPasswordInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerToken: []
      summary: Reset Password a user.
      tags:
      - Auth
swagger: "2.0"
