definitions:
  controllers.LoginInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  controllers.RegisterInput:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  controllers.companyInput:
    properties:
      name:
        type: string
    type: object
  models.Company:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.Game:
    properties:
      created_at:
        type: string
      developer_id:
        type: integer
      id:
        type: integer
      price:
        type: integer
      published_id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      year:
        type: integer
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
paths:
  /company:
    get:
      description: Get a list of Company.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Company'
            type: array
      summary: Get all Company.
      tags:
      - Company
    post:
      description: Creating a new Company.
      parameters:
      - description: the body to create a new Company
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.companyInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Company'
      summary: Create New Company.
      tags:
      - Company
  /company/{id}:
    delete:
      description: Delete a Company by id.
      parameters:
      - description: Company id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      summary: Delete one Company.
      tags:
      - Company
    get:
      description: Get an Company by id.
      parameters:
      - description: Company id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Company'
      summary: Get Company.
      tags:
      - Company
    patch:
      description: Update Company by id.
      parameters:
      - description: Company id
        in: path
        name: id
        required: true
        type: string
      - description: the body to update company
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.companyInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Company'
      summary: Update Company.
      tags:
      - Company
  /game:
    get:
      description: Get a list of Game.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Game'
            type: array
      summary: Get all game.
      tags:
      - Game
  /login:
    post:
      description: Logging in to get jwt token to access admin or user api by roles.
      parameters:
      - description: the body to login a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Login as as user.
      tags:
      - Auth
  /register:
    post:
      description: registering a user from public access.
      parameters:
      - description: the body to register a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.RegisterInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Register a user.
      tags:
      - Auth
swagger: "2.0"
